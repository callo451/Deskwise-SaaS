# Deskwise ITSM - Environment Configuration Template
# Copy this file to .env.local and fill in your values

# ============================================
# MongoDB Database
# ============================================
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/deskwise?retryWrites=true&w=majority

# ============================================
# NextAuth.js Authentication
# ============================================
NEXTAUTH_URL=http://localhost:9002
NEXTAUTH_SECRET=your-32-character-secret-here-generate-with-openssl

# ============================================
# Google Gemini AI (Optional)
# ============================================
GEMINI_API_KEY=your-gemini-api-key-here

# ============================================
# AWS SES Email Service
# ============================================
# Used for sending emails
AWS_SES_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SES_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_SES_REGION=us-east-1
AWS_SES_FROM_EMAIL=noreply@yourdomain.com
AWS_SES_FROM_NAME=Deskwise Support

# ============================================
# AWS S3 File Storage (NEW)
# ============================================
# Used for ticket attachments
# NOTE: Uses the same AWS credentials as SES above
AWS_S3_BUCKET_NAME=your-s3-bucket-name-here
AWS_S3_REGION=us-east-1

# ============================================
# Email Encryption
# ============================================
# Used to encrypt SMTP passwords stored in database
EMAIL_ENCRYPTION_SECRET=your-32-character-encryption-secret-here

# ============================================
# Remote Control (Optional)
# ============================================
RC_JWT_SECRET=your-remote-control-jwt-secret
TURN_URL=turn:your-turn-server.com:3478
TURN_USERNAME=your-turn-username
TURN_CREDENTIAL=your-turn-password

# ============================================
# Setup Instructions
# ============================================
# 1. Copy this file to .env.local:
#    cp .env.template .env.local
#
# 2. Fill in all values above
#
# 3. Generate secrets with:
#    openssl rand -base64 32
#
# 4. Create S3 bucket in AWS Console:
#    - Bucket name must be globally unique
#    - Block all public access
#    - Enable server-side encryption
#
# 5. Create MongoDB indexes:
#    npx tsx scripts/create-unified-ticket-indexes.ts
#
# 6. Start development server:
#    npm run dev
#
# See SETUP_GUIDE.md for detailed instructions
